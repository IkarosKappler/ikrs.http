package ikrs.http.resource;

/**
 * @autor Ikaros Kappler
 * @date 2012-07-23
 * @version 1.0.0
 **/

import java.io.File;
import java.net.URI;
import java.util.MissingResourceException;
import java.util.logging.Level;

import ikrs.http.Resource;
import ikrs.http.ResourceAccessor;
import ikrs.http.HTTPHandler;


public class FileSystemResourceAccessor
    extends AbstractResourceAccessor 
    implements ResourceAccessor {

    /**
     * ... 
     **/
    public FileSystemResourceAccessor( HTTPHandler handler ) {
	super( handler );
	
	
    }


    /**
     * This method locates the desired resource addressed by the given URI.
     *
     * @throws ResouceMissingException If the specified resource cannot be found.
     **/
    public Resource locate( URI uri )
	throws MissingResourceException {

	
	this.getHTTPHandler().getLogger().log( Level.INFO,
					       getClass().getName() + ".locate(...)",
					       "URI="+uri+", host="+uri.getHost()+", path="+uri.getPath()+", query="+uri.getQuery() );
	

	String path = uri.getPath();
	
	File file = new File( new File( "document_root_alpha" ), path );
	
	if( !file.exists() ) 
	    throw new MissingResourceException( "File '"+path+"' not found.",
						file.getClass().getName(),
						path 
						);


	/*
	// For testing make a dummy resource	
	String fakeContent = "Thank you.\nCome back soon.";
	byte[] data = fakeContent.getBytes();

	// Locate resource
	Resource resource = new ByteArrayResource( data, 0, data.length, true );
	*/

	Resource resource = new FileResource( file, 
					      true   // use fair locks?
					      );

	return resource;
    }


}

