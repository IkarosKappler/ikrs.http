package ikrs.httpd.resource;

/**
 * The RangedResource class is a wrapper class that allows to 'cut off' some
 * bytes at the beginning and/or at the end of an existing resource.
 *
 * @author Ikaros Kappler
 * @date 2013-02-27
 * @version 1.0.0
 **/

import java.io.InputStream;
import java.io.IOException;
import java.io.OutputStream;
import java.util.concurrent.locks.ReentrantReadWriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock; 

import ikrs.httpd.HTTPHandler;
import ikrs.httpd.ReadOnlyException;
import ikrs.httpd.Resource;
import ikrs.httpd.ResourceMetaData;
import ikrs.util.CustomLogger;

import ikrs.io.fileio.htaccess.HypertextAccessFile;


public abstract class ResourceDelegation
    extends AbstractResource {

    /**
     * The internal resource.
     **/
    protected Resource coreResource;
    

    public ResourceDelegation( Resource resource,

			       HTTPHandler handler,
			       CustomLogger logger ) {
	super( handler,
	       logger,
	       false    // if fairLocks or not is already defined in the passed resource
	       );

	this.coreResource = resource;
    }



}