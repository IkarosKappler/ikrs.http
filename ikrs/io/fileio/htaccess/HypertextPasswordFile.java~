package ikrs.io.fileio.htaccess;

/**
 * This is a simple class for checking/reading htpassword files.
 *
 * @author Ikaros Kappler
 * @date 2012-09-12
 * @version 1.0.0
 **/

import java.io.BufferedReader;
import java.io.File;
import java.io.FileInputStream;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.io.IOException;
import java.io.LineNumberReader;
import java.io.Reader;

import java.text.ParseException;
import java.text.ParsePosition;

import java.util.ArrayList;
import java.util.List;
import java.util.Map;
import java.util.TreeMap;

import java.util.regex.Matcher;
import java.util.regex.Pattern;


public class HypertextPasswordFile {


    /**
     * This class is not meant to be instantiated directly.
     **/
    private HypertextPasswordFile() {

    }


    /**
     * Matches the htpasswd file for the given user/password.
     *
     * @param file        The input file (must be a text file in .htpasswd format).
     * @param strictMode  If this mode is set to true the reader will NOT ignore any unknown/unexpected 
     *                    irregularities but throw a ParseException.
     * @throws IOException    If any IO errors occur.
     * @throws ParseException If the passed file cannot be parsed or is not a htpasswd file.
     **/
    public static boolean checkMD5( File file,
				    boolean strictMode )
	throws IOException,
	       ParseException {

	
	FileInputStream in = new FileInputStream(file);
	boolean result = checkMD5( in,
				   strictMode 
				   );
	in.close();
	return result;
    }    


    /**
     * Matches the htpasswd file for the given user/password.
     *
     * @param file        The input file (must be a text file in .htpasswd format).
     * @param strictMode  If this mode is set to true the reader will NOT ignore any unknown/unexpected 
     *                    irregularities but throw a ParseException.
     * @throws IOException    If any IO errors occur.
     * @throws ParseException If the passed file cannot be parsed or is not a htpasswd file.
     **/
    public static boolean checkMD5( InputStream in,
				    boolean strictMode
				    )
	throws IOException,
	       ParseException {

	
	return checkMD5( new LineNumberReader( new InputStreamReader(in) ),
			 strictMode
			 );
    }    


    /**
     * Matches the htpasswd file for the given user/password.
     *
     * @param file        The input file (must be a text file in .htpasswd format).
     * @param strictMode  If this mode is set to true the reader will NOT ignore any unknown/unexpected 
     *                    irregularities but throw a ParseException.
     * @throws IOException    If any IO errors occur.
     * @throws ParseException If the passed file cannot be parsed or is not a htpasswd file.
     **/
    public static boolean checkMD5( LineNumberReader lnr,
				    boolean strictMode
				    )
	throws IOException,
	       ParseException {


	
	HypertextAccessFile htaccess = new HypertextAccessFile();
	BufferedReader br = new BufferedReader( lnr );
	
	String line;
	while( (line = br.readLine()) != null ) {

	    // Each line consists of 

	}


	return false;
    }



}